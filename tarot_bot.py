import os
import random
import logging
from PIL import Image
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –∑–Ω–∞—á–µ–Ω–∏–π –∫–∞—Ä—Ç
TAROT_MEANINGS = {
            "00": {"name": "–®—É—Ç", "meaning": "–ù–µ–≤–∏–Ω–Ω–æ—Å—Ç—å, –Ω–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ, —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç—å", "reversed": "–ë–µ–∑—Ä–∞—Å—Å—É–¥—Å—Ç–≤–æ, —Ä–∏—Å–∫, –Ω–µ–∑—Ä–µ–ª–æ—Å—Ç—å"},
            "01": {"name": "–ú–∞–≥", "meaning": "–°–∏–ª–∞ –≤–æ–ª–∏, –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è", "reversed": "–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏, –æ–±–º–∞–Ω, –Ω–µ—Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"},
            "02": {"name": "–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞", "meaning": "–ò–Ω—Ç—É–∏—Ü–∏—è, —Ç–∞–π–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ, –º—É–¥—Ä–æ—Å—Ç—å", "reversed": "–°–∫—Ä—ã—Ç—ã–µ –º–æ—Ç–∏–≤—ã, –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç—É–∏—Ü–∏–∏"},
            "03": {"name": "–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞", "meaning": "–ü–ª–æ–¥–æ—Ä–æ–¥–∏–µ, –∏–∑–æ–±–∏–ª–∏–µ, –ø—Ä–∏—Ä–æ–¥–∞", "reversed": "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, –ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ, –±–µ—Å–ø–ª–æ–¥–∏–µ"},
            "04": {"name": "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä", "meaning": "–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å", "reversed": "–¢–∏—Ä–∞–Ω–∏—è, –∂–µ—Å—Ç–∫–æ—Å—Ç—å, –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–ª–∞—Å—Ç—å—é"},
            "05": {"name": "–ò–µ—Ä–æ—Ñ–∞–Ω—Ç", "meaning": "–¢—Ä–∞–¥–∏—Ü–∏—è, –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å, –æ–±—É—á–µ–Ω–∏–µ", "reversed": "–î–æ–≥–º–∞—Ç–∏–∑–º, –ª–∏—Ü–µ–º–µ—Ä–∏–µ, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ—Å—Ç—å"},
            "06": {"name": "–í–ª—é–±–ª–µ–Ω–Ω—ã–µ", "meaning": "–õ—é–±–æ–≤—å, –≥–∞—Ä–º–æ–Ω–∏—è, –æ—Ç–Ω–æ—à–µ–Ω–∏—è", "reversed": "–î–∏—Å–±–∞–ª–∞–Ω—Å, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –Ω–µ–≤–µ—Ä–Ω–æ—Å—Ç—å"},
            "07": {"name": "–ö–æ–ª–µ—Å–Ω–∏—Ü–∞", "meaning": "–ü–æ–±–µ–¥–∞, –≤–æ–ª—è, –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä–µ–¥", "reversed": "–ü–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç—Ä–æ–ª—è, –∑–∞–¥–µ—Ä–∂–∫–∏, –ø–æ—Ä–∞–∂–µ–Ω–∏–µ"},
            "08": {"name": "–°–∏–ª–∞", "meaning": "–ú—É–∂–µ—Å—Ç–≤–æ, —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞", "reversed": "–°–ª–∞–±–æ—Å—Ç—å, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Å–∏–ª–æ–π"},
            "09": {"name": "–û—Ç—à–µ–ª—å–Ω–∏–∫", "meaning": "–°–æ–∑–µ—Ä—Ü–∞–Ω–∏–µ, –ø–æ–∏—Å–∫ –∏—Å—Ç–∏–Ω—ã, —É–µ–¥–∏–Ω–µ–Ω–∏–µ", "reversed": "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, –∏–∑–æ–ª—è—Ü–∏—è, –æ—Ç–∫–∞–∑ –æ—Ç –ø–æ–º–æ—â–∏"},
            "10": {"name": "–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã", "meaning": "–°—É–¥—å–±–∞, —É–¥–∞—á–∞, —Ü–∏–∫–ª–∏—á–Ω–æ—Å—Ç—å", "reversed": "–ù–µ—É–¥–∞—á–∞, —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–∞–º"},
            "11": {"name": "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å", "meaning": "–ë–∞–ª–∞–Ω—Å, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å, –ø—Ä–∞–≤–¥–∞", "reversed": "–ù–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å, –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å, –±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å"},
            "12": {"name": "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π", "meaning": "–ñ–µ—Ä—Ç–≤–∞, —Å–¥–∞—á–∞, –Ω–æ–≤—ã–π –≤–∑–≥–ª—è–¥", "reversed": "–ë–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ –∂–µ—Ä—Ç–≤—ã, –∑–∞—Å—Ç–æ–π, —ç–≥–æ–∏–∑–º"},
            "13": {"name": "–°–º–µ—Ä—Ç—å", "meaning": "–ö–æ–Ω–µ—Ü, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ", "reversed": "–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º, —Å—Ç—Ä–∞—Ö, –∑–∞—Å—Ç–æ–π"},
            "14": {"name": "–£–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "meaning": "–ì–∞—Ä–º–æ–Ω–∏—è, —Ç–µ—Ä–ø–µ–Ω–∏–µ, –±–∞–ª–∞–Ω—Å", "reversed": "–î–∏—Å–±–∞–ª–∞–Ω—Å, –∫—Ä–∞–π–Ω–æ—Å—Ç–∏, –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ"},
            "15": {"name": "–î—å—è–≤–æ–ª", "meaning": "–ò–ª–ª—é–∑–∏—è, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–º", "reversed": "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ, –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"},
            "16": {"name": "–ë–∞—à–Ω—è", "meaning": "–ö—Ä–∞—Ö, –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏–µ, –≤–Ω–µ–∑–∞–ø–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è", "reversed": "–ò–∑–±–µ–≥–∞–Ω–∏–µ –ø—Ä–∞–≤–¥—ã, —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º"},
            "17": {"name": "–ó–≤–µ–∑–¥–∞", "meaning": "–ù–∞–¥–µ–∂–¥–∞, –≤–µ—Ä–∞, –¥—É—Ö–æ–≤–Ω–æ–µ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ", "reversed": "–û—Ç—á–∞—è–Ω–∏–µ, –ø–µ—Å—Å–∏–º–∏–∑–º, –ø–æ—Ç–µ—Ä—è –≤–µ—Ä—ã"},
            "18": {"name": "–õ—É–Ω–∞", "meaning": "–ò–ª–ª—é–∑–∏—è, —Å—Ç—Ä–∞—Ö, –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ", "reversed": "–Ø—Å–Ω–æ—Å—Ç—å, –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤"},
            "19": {"name": "–°–æ–ª–Ω—Ü–µ", "meaning": "–†–∞–¥–æ—Å—Ç—å, —É—Å–ø–µ—Ö, –∂–∏–∑–Ω–µ–Ω–Ω–∞—è —Å–∏–ª–∞", "reversed": "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –∑–∞–¥–µ—Ä–∂–∫–∏"},
            "20": {"name": "–°—É–¥", "meaning": "–í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ, –ø—Ä–∏–∑—ã–≤, –ø—Ä–æ—â–µ–Ω–∏–µ", "reversed": "–°–æ–º–Ω–µ–Ω–∏—è, —Å—Ç—Ä–∞—Ö –ø–µ—Ä–µ–º–µ–Ω, —Å–∞–º–æ–æ–±–≤–∏–Ω–µ–Ω–∏–µ"},
            "21": {"name": "–ú–∏—Ä", "meaning": "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ, –µ–¥–∏–Ω—Å—Ç–≤–æ, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ", "reversed": "–ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å, –∑–∞–¥–µ—Ä–∂–∫–∏, —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ"}
           }


class TarotBot:
    def __init__(self, token: str, cards_folder: str):
        self.token = token
        self.cards_folder = cards_folder

    async def start(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        keyboard = [["üîÆ –í—ã—Ç—è–Ω—É—Ç—å –∫–∞—Ä—Ç—É"]]
        reply_markup = {"keyboard": keyboard, "resize_keyboard": True}
        
        await update.message.reply_text(
            "‚ú® *–¢–∞—Ä–æ-–±–æ—Ç: –ì–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ*\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /card",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )

    async def send_card(self, update: Update, context: CallbackContext) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω—É —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É"""
        try:
            card_file = random.choice(os.listdir(self.cards_folder))
            is_reversed = random.choice([True, False])
            card_path = os.path.join(self.cards_folder, card_file)
            
            with Image.open(card_path) as img:
                if is_reversed:
                    img = img.rotate(180)
                
                temp_path = "temp_card.jpg"
                img.save(temp_path, "JPEG")
                
                card_num = card_file.split('_')[0]
                card_info = TAROT_MEANINGS.get(card_num, {
                    "name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞",
                    "meaning": "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                    "reversed": "–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                })
                
                caption = (
                    f"*{card_info['name']}* {'(–ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞)' if is_reversed else ''}\n\n"
                    f"üîÆ *–ó–Ω–∞—á–µ–Ω–∏–µ:*\n"
                    f"{card_info['reversed' if is_reversed else 'meaning']}\n\n"
                    f"–ù–∞–∂–º–∏—Ç–µ /card –¥–ª—è –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã"
                )
                
                with open(temp_path, 'rb') as photo:
                    await update.message.reply_photo(
                        photo=photo,
                        caption=caption,
                        parse_mode="Markdown"
                    )
            
            os.remove(temp_path)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞: {str(e)}", exc_info=True)
            await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        application = Application.builder().token(self.token).build()
        
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(CommandHandler("card", self.send_card))
        application.add_handler(MessageHandler(filters.Regex(r'^üîÆ –í—ã—Ç—è–Ω—É—Ç—å –∫–∞—Ä—Ç—É$'), self.send_card))
        
        application.run_polling()

if __name__ == '__main__':
    TOKEN = "8006477688:AAEe4Nlrb_i79VGQMgXrH7yJ4pTTa2fAIE0"
    CARDS_FOLDER = "cards"
    
    if not os.path.exists(CARDS_FOLDER):
        logger.error(f"–ü–∞–ø–∫–∞ —Å –∫–∞—Ä—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {os.path.abspath(CARDS_FOLDER)}")
        exit(1)
    
    bot = TarotBot(TOKEN, CARDS_FOLDER)
    bot.run()
